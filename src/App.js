import { useEffect, useState } from "react";
import MealDetails from "./components/MealDetails";

function App() {
  const [count, setCount] = useState(0);
  const [meal, setMeal] = useState({});
  const [click, setClick] = useState(false);
  const url = `https://www.themealdb.com/api/json/v1/1/random.php`;
  const handleClick = () => {
    setCount(count + 1);
    setClick(true);
  };
  useEffect(() => {
    fetch(url)
      .then((res) => res.json())
      .then((data) => {
        setMeal(data.meals[0]);
        console.log(meal);
      })
      .catch((err) => console.log(err));
  }, [count]);

  var ingreArr = Object.keys(meal).filter((ingre) =>
    ingre.includes("strIngredient")
  );
  var mesArr = Object.keys(meal).filter((mesure) =>
    mesure.includes("strMeasure")
  );

  var youtube_id = meal.strYoutube;

  return (
    <div className="App flex-c">
      <h1>Wanna try a recipe?</h1>
      <div className="pointer">
        <svg
          className="right"
          stroke="currentColor"
          fill="currentColor"
          strokeWidth="0"
          viewBox="0 0 512 512"
          height="1em"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M428.8 137.6h-86.177a115.52 115.52 0 0 0 2.176-22.4c0-47.914-35.072-83.2-92-83.2-45.314 0-57.002 48.537-75.707 78.784-7.735 12.413-16.994 23.317-25.851 33.253l-.131.146-.129.148C135.662 161.807 127.764 168 120.8 168h-2.679c-5.747-4.952-13.536-8-22.12-8H32c-17.673 0-32 12.894-32 28.8v230.4C0 435.106 14.327 448 32 448h64c8.584 0 16.373-3.048 22.12-8h2.679c28.688 0 67.137 40 127.2 40h21.299c62.542 0 98.8-38.658 99.94-91.145 12.482-17.813 18.491-40.785 15.985-62.791A93.148 93.148 0 0 0 393.152 304H428.8c45.435 0 83.2-37.584 83.2-83.2 0-45.099-38.101-83.2-83.2-83.2zm0 118.4h-91.026c12.837 14.669 14.415 42.825-4.95 61.05 11.227 19.646 1.687 45.624-12.925 53.625 6.524 39.128-10.076 61.325-50.6 61.325H248c-45.491 0-77.21-35.913-120-39.676V215.571c25.239-2.964 42.966-21.222 59.075-39.596 11.275-12.65 21.725-25.3 30.799-39.875C232.355 112.712 244.006 80 252.8 80c23.375 0 44 8.8 44 35.2 0 35.2-26.4 53.075-26.4 70.4h158.4c18.425 0 35.2 16.5 35.2 35.2 0 18.975-16.225 35.2-35.2 35.2zM88 384c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z"></path>
        </svg>
        <button onClick={handleClick}>
          <svg
            stroke="currentColor"
            fill="currentColor"
            strokeWidth="0"
            viewBox="0 0 512 512"
            height="1em"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M267.895 20.495s-12.96 6.614-25.907 16.354c-6.473 4.87-13.025 10.52-18.205 17.027-5.18 6.506-9.402 14.232-8.76 23.266.714 10.04 7.52 17.517 14.78 22 7.259 4.482 15.502 7.194 23.265 9.869 7.764 2.675 15.05 5.313 19.672 8.168 4.623 2.854 6.052 4.703 6.283 7.963.027.37-.418 2.346-2.613 5.103-2.195 2.757-5.726 5.93-9.42 8.71-7.388 5.557-15.095 9.54-15.095 9.54l8.21 16.016s8.826-4.494 17.706-11.174c4.44-3.34 8.976-7.227 12.681-11.88 3.705-4.655 6.993-10.44 6.485-17.593-.714-10.04-7.52-17.517-14.78-22-7.259-4.483-15.502-7.194-23.265-9.869-7.764-2.675-15.05-5.313-19.672-8.168-4.623-2.855-6.052-4.703-6.283-7.963-.16-2.252 1.217-6.168 4.886-10.777 3.67-4.61 9.218-9.549 14.946-13.858 11.454-8.617 23.296-14.718 23.296-14.718zm-128 48s-12.96 6.614-25.907 16.354c-6.473 4.87-13.025 10.52-18.205 17.027-5.18 6.506-9.402 14.232-8.76 23.266.714 10.04 7.52 17.517 14.78 22 7.259 4.482 15.502 7.194 23.265 9.869 7.764 2.675 15.05 5.313 19.672 8.168 4.623 2.854 6.052 4.703 6.283 7.963.027.37-.418 2.346-2.613 5.103-2.195 2.757-5.726 5.93-9.42 8.71-7.388 5.557-15.095 9.54-15.095 9.54l8.21 16.016s8.826-4.494 17.706-11.174c4.44-3.34 8.976-7.227 12.681-11.881 3.705-4.654 6.993-10.44 6.485-17.592-.714-10.04-7.52-17.517-14.78-22-7.259-4.483-15.502-7.194-23.265-9.869-7.764-2.675-15.05-5.313-19.672-8.168-4.623-2.855-6.052-4.703-6.283-7.963-.16-2.252 1.217-6.168 4.886-10.777 3.67-4.61 9.218-9.549 14.946-13.858 11.454-8.617 23.296-14.718 23.296-14.718zm256 0s-12.96 6.614-25.907 16.354c-6.473 4.87-13.025 10.52-18.205 17.027-5.18 6.506-9.402 14.232-8.76 23.266.714 10.04 7.52 17.517 14.78 22 7.259 4.482 15.502 7.194 23.265 9.869 7.764 2.675 15.05 5.313 19.672 8.168 4.623 2.854 6.052 4.703 6.283 7.963.027.37-.418 2.346-2.613 5.103-2.195 2.757-5.726 5.93-9.42 8.71-7.388 5.557-15.095 9.54-15.095 9.54l8.21 16.016s8.826-4.494 17.706-11.174c4.44-3.34 8.976-7.227 12.681-11.881 3.705-4.654 6.993-10.44 6.485-17.592-.714-10.04-7.52-17.517-14.78-22-7.259-4.483-15.502-7.194-23.265-9.869-7.764-2.675-15.05-5.313-19.672-8.168-4.623-2.855-6.052-4.703-6.283-7.963-.16-2.252 1.217-6.168 4.886-10.777 3.67-4.61 9.218-9.549 14.946-13.858 11.454-8.617 23.296-14.718 23.296-14.718zM256 187.501c-13 0-21.792 5.914-28.512 15.994-2.782 4.173-5.027 9.1-6.715 14.465 11.32-1.607 23.07-2.455 35.227-2.455 12.157 0 23.906.848 35.227 2.455-1.688-5.365-3.933-10.292-6.715-14.465-6.72-10.08-15.512-15.994-28.512-15.994zm0 46c-119.427 0-193.752 86.039-198.54 174.004h397.08C449.751 319.54 375.426 233.5 256 233.5zM22.363 412.14L9.637 424.866C27.757 442.987 48 443.501 64 443.501h384c16 0 36.242-.514 54.363-18.635l-12.726-12.726C475.757 426.019 464 425.505 448 425.505H64c-16 0-27.758.514-41.637-13.365zm90.451 49.361l20.002 30.004h246.368l20.002-30.004z"></path>
          </svg>
        </button>
      </div>
      {click ? (
        <MealDetails
          id={meal.idMeal}
          name={meal.strMeal}
          img={meal.strMealThumb}
          area={meal.strArea}
          category={meal.strCategory}
          src={meal.strSource}
          ingre={ingreArr.map(
            (ingre, index) => meal[ingre] && <li key={index}>{meal[ingre]}</li>
          )}
          mesures={mesArr.map(
            (mes, index) => meal[mes] && <li key={index}>{meal[mes]}</li>
          )}
          instruction={meal.strInstructions}
          youtube={youtube_id.split("v=")[1]}
        />
      ) : (
        ""
      )}
    </div>
  );
}

export default App;
